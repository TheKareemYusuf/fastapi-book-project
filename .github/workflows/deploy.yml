name: CD

on:
  push:
    branches: [main]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v1
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}
          service_account_key: ${{ secrets.GCP_SA_KEY }}
          export_default_credentials: true

      - name: Configure Docker for Artifact Registry
        run: |
          gcloud auth configure-docker ${{ secrets.GAR_LOCATION }}-docker.pkg.dev --quiet

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ secrets.GAR_LOCATION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/fastapi-book-project/fastapi-app:latest

      - name: Deploy to GCP VM
        uses: appleboy/ssh-action@v0.1.8
        with:
          host: ${{ secrets.VM_IP }}
          username: ${{ secrets.VM_USERNAME }}
          key: ${{ secrets.VM_SSH_KEY }}
          script: |
            # Pull the latest image
            docker pull ${{ secrets.GAR_LOCATION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/fastapi-book-project/fastapi-app:latest
            
            # Stop and remove existing containers
            docker stop fastapi-app || true
            docker rm fastapi-app || true
            
            # Create network if it doesn't exist
            docker network create fastapi-network || true
            
            # Run the FastAPI container
            docker run -d \
              --name fastapi-app \
              --network fastapi-network \
              --restart unless-stopped \
              ${{ secrets.GAR_LOCATION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/fastapi-book-project/fastapi-app:latest
            
            # Setup Nginx configuration
            sudo tee /etc/nginx/sites-available/fastapi << EOF
            server {
                listen 80;
                server_name _;
            
                location / {
                    proxy_pass http://fastapi-app:8000;
                    proxy_set_header Host \$host;
                    proxy_set_header X-Real-IP \$remote_addr;
                    proxy_set_header X-Forwarded-For \$proxy_add_x_forwarded_for;
                    proxy_set_header X-Forwarded-Proto \$scheme;
                }
            }
            EOF
            
            # Enable the site and restart Nginx
            sudo ln -sf /etc/nginx/sites-available/fastapi /etc/nginx/sites-enabled/
            sudo nginx -t && sudo systemctl restart nginx